{"version":3,"sources":["Header/Header.tsx","Home/Home.tsx","TextSphere/TextSphere.tsx","About/About.tsx","Async/Async.ts","Connect/Connect.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","_jsxs","className","concat","scrollAtTop","children","_jsx","onClick","scrollToSection","target","rel","href","xmlns","x","y","width","height","viewBox","d","Home","TextSphere","texts","useEffect","document","querySelector","require","TagCloud","radius","maxSpeed","initSpeed","direction","keep","About","sendFormEmail","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fromName","fromEmail","message","body","result","wrap","_context","prev","next","method","service_id","template_id","user_id","template_params","fetch","headers","JSON","stringify","sent","console","log","stop","_x","_x2","_x3","apply","arguments","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","setMessage","_useState7","_useState8","validateInputs","setValidateInputs","_useState9","_useState10","nameError","setNameError","_useState11","_useState12","emailError","setEmailError","_useState13","_useState14","messageError","setMessageError","sendInputEmail","isTextValid","isEmailFormatValid","text","length","test","htmlFor","id","maxLength","onChange","e","inputValue","_inputValue$toString","value","toString","validateName","_inputValue$toString$","trim","validateEmail","_inputValue$toString2","validateMessage","config","path","App","setScrollAtTop","aboutRef","useRef","connectRef","window","addEventListener","_aboutRef$current","topRect","current","getBoundingClientRect","top","section","_aboutRef$current2","_connectRef$current","scrollTo","behavior","scrollIntoView","error","ref","Connect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","process","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.bfa8d4a5.chunk.js","sourcesContent":["\ntype HeaderProps = {\n  scrollAtTop: boolean,\n  scrollToSection: (section: string) => void\n}\nfunction Header(props : HeaderProps) {\n\n\n\n  return (\n    <header className={`Header ${props.scrollAtTop ? 'bg-neutral' : ''}`}>\n      <h2 onClick={() => { props.scrollToSection('Home')}}>Jordan Shryock</h2>\n      <a onClick={() => { props.scrollToSection('About') }} className=\"slide\">About</a>\n      {/* <a onClick={() => { props.scrollToSection('Work')}} className=\"slide\">Work</a> */}\n      <a onClick={() => { props.scrollToSection('Connect') }} className=\"slide\">Connect</a>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/jordan-shryock/\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n          width=\"26\" height=\"26\"\n          viewBox=\"0 0 50 50\">\n            <path d=\"M 8 3.0097656 C 4.53 3.0097656 2.0097656 5.0892187 2.0097656 7.9492188 C 2.0097656 10.819219 4.59 12.990234 8 12.990234 C 11.47 12.990234 13.990234 10.870625 13.990234 7.890625 C 13.830234 5.020625 11.36 3.0097656 8 3.0097656 z M 3 15 C 2.45 15 2 15.45 2 16 L 2 45 C 2 45.55 2.45 46 3 46 L 13 46 C 13.55 46 14 45.55 14 45 L 14 16 C 14 15.45 13.55 15 13 15 L 3 15 z M 18 15 C 17.45 15 17 15.45 17 16 L 17 45 C 17 45.55 17.45 46 18 46 L 27 46 C 27.552 46 28 45.552 28 45 L 28 30 L 28 29.75 L 28 29.5 C 28 27.13 29.820625 25.199531 32.140625 25.019531 C 32.260625 24.999531 32.38 25 32.5 25 C 32.62 25 32.739375 24.999531 32.859375 25.019531 C 35.179375 25.199531 37 27.13 37 29.5 L 37 45 C 37 45.552 37.448 46 38 46 L 47 46 C 47.55 46 48 45.55 48 45 L 48 28 C 48 21.53 44.529063 15 36.789062 15 C 33.269062 15 30.61 16.360234 29 17.490234 L 29 16 C 29 15.45 28.55 15 28 15 L 18 15 z\"></path>\n        </svg>\n      </a>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.github.com/jordy1611/\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n          width=\"26\" height=\"26\"\n          viewBox=\"0 0 30 30\">\n            <path d=\"M15,3C8.373,3,3,8.373,3,15c0,5.623,3.872,10.328,9.092,11.63C12.036,26.468,12,26.28,12,26.047v-2.051 c-0.487,0-1.303,0-1.508,0c-0.821,0-1.551-0.353-1.905-1.009c-0.393-0.729-0.461-1.844-1.435-2.526 c-0.289-0.227-0.069-0.486,0.264-0.451c0.615,0.174,1.125,0.596,1.605,1.222c0.478,0.627,0.703,0.769,1.596,0.769 c0.433,0,1.081-0.025,1.691-0.121c0.328-0.833,0.895-1.6,1.588-1.962c-3.996-0.411-5.903-2.399-5.903-5.098 c0-1.162,0.495-2.286,1.336-3.233C9.053,10.647,8.706,8.73,9.435,8c1.798,0,2.885,1.166,3.146,1.481C13.477,9.174,14.461,9,15.495,9 c1.036,0,2.024,0.174,2.922,0.483C18.675,9.17,19.763,8,21.565,8c0.732,0.731,0.381,2.656,0.102,3.594 c0.836,0.945,1.328,2.066,1.328,3.226c0,2.697-1.904,4.684-5.894,5.097C18.199,20.49,19,22.1,19,23.313v2.734 c0,0.104-0.023,0.179-0.035,0.268C23.641,24.676,27,20.236,27,15C27,8.373,21.627,3,15,3z\"></path>\n        </svg>\n      </a>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"resume-button\">Resume</a>\n    </header>\n  );\n}\n\nexport default Header;\n// GetBoundingClientRect","\n\nfunction Home() {\n  // also do a loading animation when logging in\n  return (\n    <div className=\"Home\">\n      <h2>Random Quote About Being Awesome And Very <span>Attractive...</span></h2>\n    </div>\n\n    // loading screen is animated console.log or whatever maybe constantly changing based on different langauges?\n    /// says hello world in different programming languages\n  );\n}\n\nexport default Home;\n","import { useEffect } from \"react\";\n\nconst TextSphere = () => {\n\n  const texts = ['ReactJS', 'Hooks', 'AngularTS', 'JavaScript',\n    'Typescript', 'Redux', 'ASP.NET', 'Jasmine', 'Node', 'Jest',\n    'Linq', 'EF Core', 'SQL', 'Unit Testing', 'GraphQL', 'ES5/ES6',\n    'REST', 'AWS'\n  ];\n\n  useEffect(() => {\n    const tagCloud = document.querySelector('.tagcloud');\n    if (!tagCloud) {\n      const TagCloud = require(\"TagCloud\");\n      const container = \".content\";\n      TagCloud(container, texts, {\n        radius: 320,\n        maxSpeed: 'fast',\n        initSpeed: 'fast',\n        direction: 135,\n        keep: true\n      });\n    }\n\n    // TagCloud('.content', texts);\n  }, [])\n  return (\n    <span className=\"content\"></span>\n  )\n}\n\nexport default TextSphere","\nimport TextSphere from '../TextSphere/TextSphere';\n\ntype AboutProps = {\n}\nfunction About(props: AboutProps) {\n\n  return (\n    <div className=\"about sliding-page\">   \n      <TextSphere />\n      <article>\n        <h2>About</h2>\n        {/* sliding text animation */}\n        <h3>Jordan Shryock</h3>\n        <p>Blah blah blah. I'm really neat. I like being neat in neat places. Blah blah blah blah blah blah blah blah blah blah blah. I'm a neat person. I like doing neat stuff.</p>\n        <br/>\n        <p>My dog is very neat, he is so very neat.</p>\n        <br />\n        <p>WOOOOOO</p>\n        < br/>  \n        <p>Blah blah blah. I'm really neat. I like being neat in neat places. Blah blah blah blah blah blah blah blah blah blah blah. I'm a neat person. I like doing neat stuff.</p>\n        <br />\n       \n      </article>\n    </div>\n  );\n}\n\nexport default About;\n","export const sendFormEmail = async (fromName: string, fromEmail: string, message: string) => {\n  const header = {\n    method: 'POST',\n  }\n  const body = {\n    service_id: 'service_ii1v4jq',\n    template_id: 'template_hwbbzff',\n    user_id: 'STjwCm_WQ8vqGOq2j',\n    template_params: {\n      'from_name': fromName,\n      'from_email': fromEmail,\n      'message': message\n    }\n  }\n  const result = await fetch('https://api.emailjs.com/api/v1.0/email/send',\n    {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }\n    )\n    console.log('email post result', result);\n}","import React, { useEffect, useState } from 'react';\nimport { sendFormEmail } from '../Async/Async';\n// require('dotenv').config()\ntype ConnectProps = {\n}\n\n// error handling\n\nfunction About(props: ConnectProps) {\n\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n\n  const [validateInputs, setValidateInputs] = useState<boolean>(false);\n\n  const [nameError, setNameError] = useState<string>('At least tell me your name!');\n  const [emailError, setEmailError] = useState<string>('Please tell me how to contact you!');\n  const [messageError, setMessageError] = useState<string>('Please at least say hello...');\n\n  const sendInputEmail = async () => {\n    setValidateInputs(true);\n    if (isTextValid(name) && isTextValid(message) && isTextValid(email) && isEmailFormatValid(email)) {\n      await sendFormEmail(name, email, message);\n      setValidateInputs(false);\n      setName('');\n      setEmail('');\n      setMessage('');\n      setNameError('At least tell me your name!');\n      setEmailError('Please tell me how to contact you!')\n      setMessageError('Please at least say hello...');\n    }   \n  }\n\n  const validateName = (inputValue: HTMLInputElement[\"value\"]) => {\n    const value: string = inputValue?.toString() ?? '';\n    if (!isTextValid(value)) {\n        setNameError('At least tell me your name!');\n    } else {\n      setNameError('');\n    }\n    setName(value)\n  }\n\n  const validateEmail = (inputValue?: HTMLInputElement[\"value\"]) => {\n    const value: string = inputValue?.toString().trim() ?? '';\n    if (!isTextValid(value)) {\n      setEmailError('Please tell me how to contact you!');\n    } else if (!isEmailFormatValid(value)) {\n      setEmailError('Sorry, incorrect email format...');\n    } else {\n      setEmailError('');\n    }\n    setEmail(value);\n  }\n\n  const validateMessage = (inputValue?: HTMLInputElement[\"value\"]) => {\n    const value: string = inputValue?.toString() ?? '';\n    if (!isTextValid(value)) {\n      setMessageError('Please at least say hello...');\n    } else {\n      setMessageError('');\n    }\n    setMessage(value);\n  }\n\n  const isTextValid = (text: string) => {\n    return text?.length > 0\n  }\n\n  const isEmailFormatValid = (text: string) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(text);\n  }\n\n  return (\n    <div className=\"connect sliding-page\">\n      <div className=\"connect-info\">\n        <h3>Connect</h3>\n        <h2>Sophisticated AF</h2>\n        <p>Whether I'm seeking opportunities or not, I'm always open to making new connections! \n          <br/>\n          Please reach out if you have any questions or just want to say hi.\n        </p>\n\n      </div>\n      <form className='connect-form'>\n        <label htmlFor='name-input'>Name</label>\n        <input id='name-input' maxLength={50} onChange={e => validateName(e.target.value)} value={name}></input>\n        {(validateInputs && messageError.length > 0) && <p className=\"name-warning\">{nameError}</p>}\n        <label htmlFor='email-input'>Email</label>\n        <input id='email-input' maxLength={50} onChange={e => validateEmail(e.target.value)} value={email}></input>\n        {(validateInputs && emailError) && <p className=\"email-warning\">{emailError}</p>}\n        <label htmlFor='message-input'>Message</label>\n        <textarea id='message-input' onChange={e => validateMessage(e.target.value)} value={message}></textarea>\n        {(validateInputs && messageError.length > 0) && <p className=\"message-warning\">{messageError}</p>}\n        <div className=\"connect-bar\">\n          <a className='connect-button' onClick={sendInputEmail}>Connect</a>\n          <svg className='submit-path' xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n            width=\"18\" height=\"18\" viewBox=\"0 0 97.103 97.104\"\n            >\n              <path d=\"M93.82,0.37c-0.697-0.469-1.6-0.494-2.32-0.066L3.388,52.585c-0.748,0.444-1.158,1.291-1.043,2.152\n                c0.113,0.86,0.732,1.571,1.568,1.805l22.389,6.233c0.68,0.188,1.409,0.036,1.956-0.41l35.768-29.219L39.075,64.993\n                c-0.301,0.382-0.462,0.854-0.462,1.339v28.602c0,0.966,0.636,1.814,1.563,2.083c0.201,0.06,0.405,0.087,0.607,0.087\n                c0.728,0,1.425-0.366,1.83-1.004l15.577-24.45l22.772,6.338c0.598,0.167,1.24,0.067,1.764-0.271\n                c0.521-0.339,0.873-0.885,0.967-1.499L94.753,2.493C94.878,1.665,94.515,0.838,93.82,0.37z\"\n              />\n          </svg>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default About;\n","import { useEffect, useRef, useState } from 'react';\nimport '../SASS/_Styles.scss';\nimport Header from '../Header/Header';\nimport Home from '../Home/Home';\nimport About from '../About/About';\nimport Work from '../Work/Work';\nimport Connect from '../Connect/Connect';\nrequire('dotenv').config({path:'.env'})\n\n// import TextSphere from '../Elements/TextSphere/TextSphere';\n\nfunction App() {\n\n  const [scrollAtTop, setScrollAtTop] = useState(false)\n  const homeRef = useRef<HTMLInputElement>(null);\n  const aboutRef = useRef<HTMLInputElement>(null)\n  const workRef = useRef<HTMLInputElement>(null);\n  const connectRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      const topRect = aboutRef?.current?.getBoundingClientRect();\n      setScrollAtTop(!!topRect && topRect.top <= 56);\n    })\n  }, [])\n\n  const scrollToSection= (section: string) => {\n    switch (section) {\n      case 'Home':\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n        break\n      case 'About':\n        aboutRef.current?.scrollIntoView({ behavior: 'smooth' });\n        break;\n      // case 'Work':\n      //   workRef.current?.scrollIntoView({ behavior: 'smooth' });\n      //   break;\n      case 'Connect':\n        connectRef.current?.scrollIntoView({ behavior: 'smooth' });\n        break;\n      default: \n        console.error(`Section ${section} does not exist`)\n    }\n  }\n\n  return (\n    <main className=\"App\">\n      <Header scrollAtTop={scrollAtTop} scrollToSection={scrollToSection} />\n      <Home />\n      <div ref={aboutRef}><About /></div>\n      {/* <div ref={workRef}><Work /></div> */}\n      <div ref={connectRef}><Connect /></div>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\nconsole.log(process.env)\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}